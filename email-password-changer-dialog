#!/bin/bash
# Dialog for changing email password logins
# TqniaIT | www.tqniait.com
# Written by Dr. Ehab Diab
# ehab@ehabdiab.com

# Define the result file path
result_file="/tmp/emailpass.txt"

# Function to generate a random complex password
generate_complex_password() {
    lowercase="abcdefghijklmnopqrstuvwxyz"
    uppercase="ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    numbers="0123456789"
    special_chars="!@#$%^&*_-"

    all_chars="$lowercase$uppercase$numbers$special_chars"
    shuffled_chars=$(echo "$all_chars" | fold -w1 | shuf | tr -d '\n')

    echo "$shuffled_chars" | head -c 16
}

# Display menu using whiptail
while true; do
    CHOICE=$(whiptail --title "Password Update Script" --menu "Choose an option:" 15 50 5 \
        "1" "Change only one email password" \
        "2" "Change all emails passwords related to a single domain" \
        "3" "Change all email passwords" \
        "4" "Exit" 3>&1 1>&2 2>&3)

    if [ $? -ne 0 ]; then
        whiptail --msgbox "Exiting the script." 8 40
        exit 0
    fi

    case $CHOICE in
        "1")
            email_address=$(whiptail --inputbox "Enter the email address you want to change the password for:" 10 50 3>&1 1>&2 2>&3)
            if [ $? -ne 0 ]; then
                whiptail --msgbox "Exiting the script." 8 40
                exit 0
            fi
            new_password=$(generate_complex_password)
            doveadm_password_hash=$(doveadm pw -s SHA512-CRYPT -p "$new_password")
            mysql_password_hash=$(mysql -Bse "USE postfix; SELECT password FROM mailbox WHERE username='$email_address';")
            if [[ -n $mysql_password_hash ]]; then
                mysql -e "USE postfix; UPDATE mailbox SET password='$doveadm_password_hash' WHERE username='$email_address';"
                echo "Password updated for $email_address: $new_password" | tee -a $result_file
                whiptail --msgbox "Password updated for $email_address: $new_password" 10 50
            else
                whiptail --msgbox "Email address not found in the database." 10 50
            fi
            ;;
        "2")
            domain_name=$(whiptail --inputbox "Enter the domain name to change all email passwords for:" 10 50 3>&1 1>&2 2>&3)
            if [ $? -ne 0 ]; then
                whiptail --msgbox "Exiting the script." 8 40
                exit 0
            fi
            email_accounts=$(mysql -e "USE postfix; SELECT username FROM mailbox WHERE username LIKE '%$domain_name';" -sN)
            > $result_file  # Clear the result file
            for account in $email_accounts; do
                new_password=$(generate_complex_password)
                password_hash=$(doveadm pw -s SHA512-CRYPT -p "$new_password")
                mysql -e "USE postfix; UPDATE mailbox SET password='$password_hash' WHERE username='$account';"
                echo "Password updated for $account: $new_password" | tee -a $result_file
            done
            whiptail --msgbox "Password updated for all email accounts under $domain_name domain. Results saved in $result_file" 10 50
            ;;
        "3")
            email_accounts=$(mysql -e "USE postfix; SELECT username FROM mailbox;" -sN)
            > $result_file  # Clear the result file
            for account in $email_accounts; do
                new_password=$(generate_complex_password)
                password_hash=$(doveadm pw -s SHA512-CRYPT -p "$new_password")
                mysql -e "USE postfix; UPDATE mailbox SET password='$password_hash' WHERE username='$account';"
                echo "Password updated for $account: $new_password" | tee -a $result_file
            done
            whiptail --msgbox "Password updated for all email accounts. Results saved in $result_file" 10 50
            ;;
        
        "4")
            whiptail --msgbox "Exiting the script." 8 40
            exit 0
            ;;
        *)
            whiptail --msgbox "Invalid choice. Please choose a valid option." 8 40
            ;;
    esac
done
