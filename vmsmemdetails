#!/bin/bash
# Script Name: VM and CT Memory Details
# Script to show detailed memory usage for both VMs and CTs on PROXMOX nodes
# TqniaIT | www.tqniait.com
# Written by Dr. Ehab Diab
# ehab@ehabdiab.com
#This Bash script provides an overview of memory allocations for Virtual Machines (VMs) and Container-based Virtualization (CT) on a Proxmox Virtual Environment (PVE) host. It helps system administrators and users quickly understand the memory consumption of their virtualized environments.

#Features:
#Retrieves memory allocation details for both VMs and CTs.
#Displays the hostname, status (if available), and memory allocation for each VM and CT.
#Calculates the total memory consumption for VMs, CTs, and provides a grand total in both MB and GB.
#Supports determining the status of VMs using the "qm" command for VMs and CTs using the "pct list" command for CTs.
#Outputs results in a single, readable format.

#Requirements:
#Proxmox Virtual Environment (PVE) host with "qm" and "pct" commands available.
#Appropriate permissions to access VM and CT configuration files and retrieve their status.


vm_config_dir="/etc/pve/qemu-server/"
ct_config_dir="/etc/pve/lxc/"
total_vm_memory=0
total_ct_memory=0

# Function to get hostname from VM or CT configuration file
get_hostname() {
    local config_file="$1"
    local hostname_key="$2"
    local hostname=$(grep -i "$hostname_key" "$config_file" | awk '{print $2}')
    if [ -z "$hostname" ]; then
        echo "No Hostname"
    else
        echo "$hostname"
    fi
}

# Function to get the status of a VM or CT
get_status() {
    local id="$1"
    local type="$2"
    local status

    if [ "$type" = "VM" ]; then
        status=$(qm status "$id" | grep "status:" | awk '{print $2}')
    else
        status=$(pct list |grep "$id"| awk '{print $2}')
    fi

    if [ -n "$status" ]; then
        echo "$status"
    #else
    #    echo "N/A"
    fi
}

# Loop through VM configuration files
for vm_config_file in "$vm_config_dir"*.conf; do
    if [ -f "$vm_config_file" ]; then
        vmid=$(basename "$vm_config_file" .conf)
        memory_allocation=$(grep -i 'memory' "$vm_config_file" | awk '{print $2}')
        vm_hostname=$(get_hostname "$vm_config_file" 'name:')
        vm_status=$(get_status "$vmid" "VM")

        if [ -n "$memory_allocation" ]; then
            echo "VM $vmid - $vm_hostname - $vm_status: $memory_allocation MB"
            total_vm_memory=$((total_vm_memory + memory_allocation))
        fi
    fi
done

# Loop through CT configuration files
for ct_config_file in "$ct_config_dir"*.conf; do
    if [ -f "$ct_config_file" ]; then
        ctid=$(basename "$ct_config_file" .conf)
        memory_allocation=$(grep -i 'memory' "$ct_config_file" | awk '{print $2}')
        ct_hostname=$(get_hostname "$ct_config_file" 'hostname:')
        ct_status=$(get_status "$ctid" "CT")

        if [ -n "$memory_allocation" ]; then
            echo "CT $ctid - $ct_hostname - $ct_status: $memory_allocation MB"
            total_ct_memory=$((total_ct_memory + memory_allocation))
        fi
    fi
done

grand_total_mb=$((total_vm_memory + total_ct_memory))
grand_total_gb=$(awk "BEGIN {printf \"%.2f\", $grand_total_mb / 1024}")
echo "Total Memory for VMs: ${total_vm_memory} MB"
echo "Total Memory for CTs: ${total_ct_memory} MB"
echo "Grand Total Memory: ${grand_total_mb} MB (${grand_total_gb} GB)"

exit 0
